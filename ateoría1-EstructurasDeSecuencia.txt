INDICE:

ALGORITMO                     -> Linea 11
CLASIFICACI칍N DE ALGORITMOS   -> Linea 18
PROGRAMA                      -> Linea 30
ETAPAS DE UN ALGORITMO        -> Linea 32
VARIABLE                      -> Linea 38
PSEUDOC칍DIGO                  -> Linea 40


ALGORITMO: Un algoritmo es un m칠todo de soluci칩n de un problema expresado a trav칠s de un conjunto de pasos, procedimientos o acciones.

 - Las instrucciones para instalar un equipo de sonido.
 - Una receta para preparar un plato de comida.
 - Las instrucciones para hallar el m치ximo com칰n divisor de dos n칰meros.
 - Las instrucciones para convertir una cantidad dada en soles a d칩lares.
 
CLASIFICACI칍N DE ALGORITMOS: Los algoritmos pueden clasificasre en computacionales y no computacionales.

COMPUTACIONAL: Solo es computacional cuando puede ser ejecutado en una computadora.

  - Sumar n칰meros del 1 al 10. 
  - Las instrucciones para hallar el m치ximo com칰n divisor de dos n칰meros.
  
NO COMPUTACIONAL: Es no computacional cuando no pueden ser ejecutadas por una computadora. El ejecutor de este tipo de algoritmo es un ser humano

  - Las instrucciones para instalar un equipo de sonido. 
  - Una receta para preparar un plato de comida.
  
PROGRAMA: Un programa es un conjunto de instrucciones expresadas mediante un lenguaje de programaci칩n, estos surgen ante la necesidad de automatizar la soluci칩n de un problema 

ETAPAS DE UN ALGORITMO: Todo Algoritmo tiene tres etapas.

 - Entrada de datos.
 - Proceso de c치lculo.
 - Salida de los resultados.
 
 VARIABLE: Una variable es el nombre asignado a una zona (casilla) de la memoria RAM durante la ejecuci칩n de un programa con la finalidad de almacenar un valor o dato.
 
PSEUDOC칍DIGO: Ea una imitaci칩n del c칩digo fuente, con la ecepci칩n de que este no tiene reglas formales, puede variar de un programador a otro.
              Un pseudoc칩digo puede contener s칤mbolos (+, -, *, /, =, etc.), t칠rminos (leer, imprimir, abrir, cerrar, etc.) y estructuras de programaci칩n 
              (si, si...sino, hacer...mientras, mientras...hacer, para...mientras). Esto a su vez  permite al programador concentrarse en la l칩gica y 
              en las estructuras de control y no preocuparse de las reglas de un lenguaje espec칤fico.
              
   Ejemplo:     
          Dise침e un algoritmo que determine el 치rea de un c칤rculo y la longitud de su 
          circunferencia conociendo su radio. Considere las siguientes f칩rmulas:
          
          洧냢 = 3.1416 * r ^ 2  
          洧냤 = 2 * 3.1416 * r
          
          Siendo 洧냢 el 치rea y 洧냤 la longitud de la circunferencia.
          
          Soluci칩n:
          
          Inicio
              // Declaraci칩n de variables
              real r, A, C
              
              // Entrada de datos
              Leer r
             
             // Proceso de c치lculo
              A = 3.1416*r*r
              C = 3.1416*r
              
              // Salida de resultado  
             Imprimir A, C
          Fin
          
          
          
          
          
